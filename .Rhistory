pdf_text <- readPDF(control = list(text = "-layout"))(pdf_filename)
# Check if the PDF contains any searchable text by checking if the length of the text is greater than zero
if (nchar(pdf_text) == 0) {
# Move the PDF without searchable text to the no text PDF folder
file.rename(pdf_filename, file.path(no_text_pdf_folder, basename(pdf_filename)))
} else if (class(pdf_text) == "try-error") {
# If the 'readPDF' function returned an error, move the PDF to the error PDF folder
file.rename(pdf_filename, file.path(error_pdf_folder, basename(pdf_filename)))
}
}
# Set the path to the folder containing the PDFs
pdf_folder <- "fara/registrations/pdfs"
# Set the path to the folder where you want to save the PDFs without searchable text
no_text_pdf_folder <- "fara/registrations/pdfs/notext"
# Set the path to the folder where you want to save the PDFs that could not be processed
error_pdf_folder <- "fara/registrations/pdfs/unreadable"
# Scan the PDF folder and extract a list of PDF filenames
pdf_filenames <- list.files(pdf_folder, full.names = TRUE, pattern = "\\.pdf$")
# Iterate over the PDF filenames and move PDFs without searchable text to the no text PDF folder
for (pdf_filename in pdf_filenames) {
# Extract the text from the PDF using the 'readPDF' function from the 'tm' package
pdf_text <- readPDF(control = list(text = "-layout"))(pdf_filename)
# Check if the PDF contains any searchable text by checking if the length of the text is greater than zero
if (nchar(pdf_text) == 0) {
# Move the PDF without searchable text to the no text PDF folder
file.rename(pdf_filename, file.path(no_text_pdf_folder, basename(pdf_filename)))
} else if (class(pdf_text) == "try-error") {
# If the 'readPDF' function returned an error, move the PDF to the error PDF folder
file.rename(pdf_filename, file.path(error_pdf_folder, basename(pdf_filename)))
}
}
subfolder <- file.path("fara/registrations/pdfs")
getwd()
subfolder <- file.path("fara", "registrations", "pdfs")
read(subfolder)
head(subfolder)
library(pdftools)
subfolder <- file.path("fara", "registrations", "pdfs")
files <- list.files(subfolder, pattern = "*.pdf")
readable <- c()
unreadable <- c()
for (file in files) {
file_path <- file.path(subfolder, file)
text <- tryCatch(pdf_text(file_path), error = function(e) "Error")
if (text == "Error") {
unreadable <- c(unreadable, file)
} else {
readable <- c(readable, file)
}
}
library(pdftools)
subfolder <- file.path("fara", "registrations", "pdfs")
files <- list.files(subfolder, pattern = "*.pdf")
readable <- c()
unreadable <- c()
for (file in files) {
file_path <- file.path(subfolder, file)
text <- tryCatch(pdf_text(file_path), error = function(e) "Error")
if (any(text == "Error")) {
unreadable <- c(unreadable, file)
} else {
readable <- c(readable, file)
}
}
library(pdftools)
subfolder <- file.path("fara", "registrations", "pdfs")
files <- list.files(subfolder, pattern = "*.pdf")
# Create an empty vector to store the names of the damaged PDF files
damaged <- c()
# Loop through the PDF files
for (file in files) {
# Extract the text from the file
text <- tryCatch(pdf_text(file), error = function(e) e)
# If the text extraction fails, add the file to the damaged vector
if (inherits(text, "error")) {
damaged <- c(damaged, file)
}
}
# Print the names of the damaged PDF files
print(damaged)
library(pdftools)
subfolder <- file.path("fara", "registrations", "pdfs")
files <- list.files(subfolder, pattern = "*.pdf")
# Create an empty vector to store the names of the damaged PDF files
damaged <- c()
# Loop through the PDF files
for (file in files) {
# Extract the text from the file
text <- tryCatch(pdf_text(file), error = function(e) e)
# If the text extraction fails, add the file to the damaged vector
if (inherits(text, "china")) {
damaged <- c(damaged, file)
}
}
# Print the names of the damaged PDF files
print(damaged)
poke <- pdf_text("fara/registrations/pdf/6328-Amendment-20200203-15.pdf")
poke <- pdf_text("fara/registrations/pdfs/6328-Amendment-20200203-15.pdf")
head(poke)
grep("foreign", poke)
grepl("foreign", poke)
subfolder <- file.path("fara", "registrations", "pdfs")
files <- list.files(subfolder, pattern = "*.pdf")
# Create an empty vector to store the names of the PDF files that contain the word
results <- c()
# Loop through the PDF files
for (file in files) {
# Read the PDF file
pdf_text <- pdf_text(file)
# Search for the word "hello" in the character vector
if (any(grepl("China", pdf_text))) {
# If the word is found, add the file to the results vector
results <- c(results, file)
}
}
subfolder <- file.path("fara", "registrations", "pdfs")
files <- list.files(subfolder, pattern = "*.pdf")
# Create an empty vector to store the names of the PDF files that contain the word
results <- c()
# Loop through the PDF files
for (file in files) {
# Read the PDF file
pdf_text <- pdf_text(file)
# Search for the word "hello" in the character vector
if (any(grepl("China", pdf_text))) {
# If the word is found, add the file to the results vector
results <- c(results, file)
}
}
list.files()
list.files(subfolder)
files <- list.files(subfolder, pattern = "*.pdf")
subfolder <- file.path("fara", "registrations", "pdfs")
files <- list.files(subfolder, pattern = "*.pdf")
# Create an empty vector to store the names of the PDF files that contain the word
results <- c()
# Loop through the PDF files
for (file in files) {
# Read the PDF file
pdf_text <- pdf_text(file)
# Search for the word "hello" in the character vector
if (any(grepl("China", pdf_text))) {
# If the word is found, add the file to the results vector
results <- c(results, file)
}
}
head(files)
subfolder <- file.path("fara", "registrations", "pdfs")
files <- list.files(subfolder, pattern = "*.pdf")
# Create an empty vector to store the names of the PDF files that contain the word
results <- c()
# Loop through the PDF files
for (file in files) {
# Read the PDF file
pdf_text <- pdf_text(file)
# Search for the word "hello" in the character vector
if (any(grepl("China", pdf_text))) {
# If the word is found, add the file to the results vector
results <- c(results, file)
}
}
file <- "6328-Amendment-20200203-15.pdf"
print(file)
print(file)
setwd(fara/registrations/pdfs)
getwd()
getwd()
setwd("fara/registrations/pdfs")
files <- list.files(pattern = "*.pdf")
# Create an empty vector to store the names of the PDF files that contain the word
results <- c()
# Loop through the PDF files
for (file in files) {
# Read the PDF file
pdf_text <- pdf_text(file)
# Search for the word "hello" in the character vector
if (any(grepl("China", pdf_text))) {
# If the word is found, add the file to the results vector
results <- c(results, file)
}
}
# List all PDF files in the working directory
files <- list.files(pattern = "*.pdf")
# Create an empty vector to store the names of the damaged PDF files
damaged <- c()
# Loop through the PDF files
for (file in files) {
# Extract the text from the file
text <- tryCatch(pdf_text(file), error = function(e) e)
# If the text extraction fails, add the file to the damaged vector
if (inherits(text, "error")) {
damaged <- c(damaged, file)
}
}
# Print the names of the damaged PDF files
print(damaged)
# Create an empty vector to store the names of the PDF files that contain the word
results <- c()
# Loop through the PDF files
for (file in files) {
# Read the PDF file
pdf_text <- pdf_text(file)
# Search for the word "hello" in the character vector
if (any(grepl("China", pdf_text))) {
# If the word is found, add the file to the results vector
results <- c(results, file)
}
}
files <- list.files(pattern = "*.pdf")
# Create an empty vector to store the names of the PDF files that contain the word
results <- c()
# Loop through the PDF files
for (file in files) {
# Read the PDF file
pdf_text <- pdf_text(file)
# Search for the word "hello" in the character vector
if (any(grepl("China", pdf_text))) {
# If the word is found, add the file to the results vector
results <- c(results, file)
}
}
print(results)
getOption("timeout")
options(timeout = 99999)
getOption("timeout")
library(tidyverse)
library(rvest)
# Read in the URL list from a CSV file
url_list <- read.csv("fara/blank-fara.csv")
getwd
getwd()
setwd("C:/Users/jakeh/Documents/Coding/rhetoric-xi/")
getwd()
library(tidyverse)
library(rvest)
# Read in the URL list from a CSV file
url_list <- read.csv("fara/blank-fara.csv")
# Loop through each URL and download the PDF
for (i in 1:nrow(url_list)) {
url <- url_list[i, "url"]
filename <- url_list[i, "filename"]
# Specify the path to the subfolder where you want to save the files
filepath <- paste0("fara/registrations/pdfs/blanks/", filename)
download.file(url, destfile = filepath, mode = "wb")
# Take a 10 second break every 5 requests
if (i %% 5 == 0) {
Sys.sleep(10)
}
}
getwd
getwd()
setwd("fara/registrations/blanks")
getwd()
setwd("fara/registrations/blanks/")
setwd("fara/registrations/pdfs/blanks/")
getwd()
# This first script will list the pdfs that contain the word "China"
files <- list.files(pattern = "*.pdf")
# Create an empty vector to store the names of the PDF files that contain the word
results <- c()
# Loop through the PDF files
for (file in files) {
# Read the PDF file
pdf_text <- pdf_text(file)
# Search for the word "hello" in the character vector
if (any(grepl("China", pdf_text))) {
# If the word is found, add the file to the results vector
results <- c(results, file)
}
}
# This first script will list the pdfs that contain the word "China"
library(pdftools)
files <- list.files(pattern = "*.pdf")
# Create an empty vector to store the names of the PDF files that contain the word
results <- c()
# Loop through the PDF files
for (file in files) {
# Read the PDF file
pdf_text <- pdf_text(file)
# Search for the word "hello" in the character vector
if (any(grepl("China", pdf_text))) {
# If the word is found, add the file to the results vector
results <- c(results, file)
}
}
head(results)
write.csv(results)
write.csv(results, "results.csv")
read.csv("results.csv")
# Load the necessary libraries
library(tidyverse)
# Read in the CSV file
results <- read_csv("results.csv")
# Loop through each file in the list
for (i in 1:nrow(results)) {
# Get the file name from the list
file_name <- results$file_names[i]
# Use the file.rename() function to move the file
file.rename(from = file_name, to = "china-hit" + file_name)
}
# Load the necessary libraries
library(tidyverse)
# Read in the CSV file
results <- read_csv("results.csv")
# Loop through each file in the list
for (i in 1:nrow(results)) {
# Get the file name from the list
file_name <- results$file_names[i]
# Use the file.rename() function to move the file
file.rename(from = file_name, to = "china-hit" + file_name)
}
# Load the necessary libraries
library(tidyverse)
# Read in the CSV file
results <- read_csv("results.csv")
# Loop through each file in the list
for (i in 1:nrow(results)) {
# Get the file name from the list
file_name <- results$file_names[i]
# Concatenate the strings using the paste() function
to <- paste("china-hit", file_name, sep="")
# Use the file.rename() function to move the file
file.rename(from = file_name, to = to)
}
# Load the necessary libraries
library(tidyverse)
# Read in the CSV file
results <- read_csv("results.csv")
# Loop through each file in the list
for (i in 1:nrow(results)) {
# Get the file name from the list
file_name <- results$file_names[i]
# Concatenate the strings using the paste() function
to <- paste("china-hit", file_name, sep="")
# Use the file.rename() function to move the file
file.rename(from = file_name, to = to)
}
warnings()
# Load the necessary libraries
library(tidyverse)
# Read in the CSV file
results <- read_csv("results.csv")
# Loop through each file in the list
for (i in 1:nrow(results)) {
# Get the file name from the list
file_name <- results$file_names[i]
# Concatenate the strings using the paste() function
to <- paste("china-hit/", file_name, sep="")
# Use the file.rename() function to move the file
file.rename(from = file_name, to = to)
}
warnings()
getwd()
# Load the necessary libraries
library(tidyverse)
# Read in the CSV file
results <- read_csv("results.csv")
# Loop through each file in the list
for (i in 1:nrow(results)) {
# Get the file name from the list
file_name <- results$file_names[i]
# Concatenate the strings using the paste() function
to <- paste("china-hit/", file_name, sep="")
# Use the file.rename() function to move the file
file.rename(from = file_name, to = to)
}
warnings()
getwd()
setwd("C:/Users/jakeh/Documents/Coding/rhetoric-xi/fara/registrations/pdfs/blanks")
# Read in the CSV file
results <- read_csv("results.csv")
# Loop through each file in the list
for (i in 1:nrow(results)) {
# Get the file name from the list
file_name <- results$file_names[i]
# Concatenate the strings using the paste() function
to <- paste("china-hit/", file_name, sep="")
# Use the file.rename() function to move the file
file.rename(from = file_name, to = to)
}
# Load the necessary libraries
library(tidyverse)
setwd("C:/Users/jakeh/Documents/Coding/rhetoric-xi/fara/registrations/pdfs/blanks")
# Read in the CSV file
results <- read_csv("results.csv")
# Loop through each file in the list
for (i in 1:nrow(results)) {
# Get the file name from the list
file_name <- results$file_names[i]
# Concatenate the strings using the paste() function
to <- paste("/china-hit/", file_name, sep="")
# Use the file.rename() function to move the file
file.rename(from = file_name, to = to)
}
# Concatenate the strings using the paste() function
to <- paste("china-hit", file_name, sep="")
# Use the file.rename() function to move the file
file.rename(from = file_name, to = to)
# Concatenate the strings using the paste() function
to <- paste("china-hit/", file_name, sep="")
# Load the necessary libraries
library(tidyverse)
setwd("C:/Users/jakeh/Documents/Coding/rhetoric-xi/fara/registrations/pdfs/blanks")
# Read in the CSV file
results <- read_csv("results.csv")
# Loop through each file in the list
for (i in 1:nrow(results)) {
# Get the file name from the list
file_name <- results$file_names[i]
# Concatenate the strings using the paste() function
to <- paste("china-hit/", file_name, sep="")
# Use the file.rename() function to move the file
file.rename(from = file_name, to = to)
}
# Load the necessary libraries
library(tidyverse)
setwd("C:/Users/jakeh/Documents/Coding/rhetoric-xi/fara/registrations/pdfs/blanks")
# Read in the CSV file
results <- read_csv("results.csv")
# Loop through each file in the list
for (i in 1:nrow(results)) {
# Get the file name from the list
file_name <- results$file_names[i]
# Concatenate the strings using the paste() function
to <- paste0(getwd(), "/china-hit/", file_name)
# Use the file.rename() function to move the file
file.rename(from = file_name, to = to)
}
warnings()
# Load the necessary libraries
library(tidyverse)
setwd("C:/Users/jakeh/Documents/Coding/rhetoric-xi/fara/registrations/pdfs/blanks")
# Read in the CSV file
results <- read_csv("results.csv")
# Loop through each file in the list
for (i in 1:nrow(results)) {
# Get the file name from the list
file_name <- results$file_names[i]
# Concatenate the strings using the paste() function
to <- "C:/Users/jakeh/Documents/Coding/rhetoric-xi/fara/registrations/pdfs/blanks/china-hit" + file_name
# Use the file.rename() function to move the file
file.rename(from = file_name, to = to)
}
# Concatenate the strings using the paste() function
to <- paste0(getwd(), "/china-hit/", file_name)
# Use the file.rename() function to move the file
file.rename(from = file_name, to = to)
getwd()
# Load the necessary libraries
library(tidyverse)
setwd("C:/Users/jakeh/Documents/Coding/rhetoric-xi/fara/registrations/pdfs/blanks")
# Read in the CSV file
results <- read_csv("results.csv")
# Loop through each file in the list
for (i in 1:nrow(results)) {
# Get the file name from the list
file_name <- results$file_names[i]
# Concatenate the strings using the paste() function
to <- paste0(getwd(), "/china-hit/", file_name)
# Use the file.rename() function to move the file
file.rename(from = 'file_name', to = to)
}
warnings()
# Load the necessary libraries
library(tidyverse)
setwd("C:/Users/jakeh/Documents/Coding/rhetoric-xi/fara/registrations/pdfs/blanks")
# Read in the CSV file
results <- read_csv("results.csv")
# Loop through each file in the list
for (i in 1:nrow(results)) {
# Get the file name from the list
file_name <- results$file_names[i]
# Concatenate the strings using the paste() function
to <- paste0(getwd(), "/china-hit/", 'file_name')
# Use the file.rename() function to move the file
file.rename(from = 'file_name', to = to)
}
warnings()
# Load the necessary libraries
library(tidyverse)
setwd("C:/Users/jakeh/Documents/Coding/rhetoric-xi/fara/registrations/pdfs/blanks")
# Read in the CSV file
results <- read_csv("results.csv")
# Loop through each file in the list
for (i in 1:nrow(results)) {
# Get the file name from the list
file_name <- results$file_names[i]
# Concatenate the strings using the paste() function
to <- paste0(getwd(), "/china-hit/", file_name)
# Use the file.rename() function to move the file
file.rename(from = 'file_name', to = to)
}
# Read in the CSV file
results <- read_csv("results.csv")
# Loop through each file in the list
for (i in 1:nrow(results)) {
# Get the file name from the list
file_name <- results$file_names[i]
# Concatenate the strings using the paste() function
to <- paste0(getwd(), "/china-hit/", file_name)
# Use the file.rename() function to move the file
file.rename(from = file_name, to = to)
}
# Concatenate the strings using the paste() function
to <- paste("china-hit/", file_name)
# Use the file.rename() function to move the file
file.rename(from = file_name, to = to)
# Concatenate the strings using the paste() function
to <- paste0("china-hit/", file_name)
# Use the file.rename() function to move the file
file.rename(from = file_name, to = to)
getwd()
